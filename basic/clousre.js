function test(j) {
    var i = 0;
    return function() {
	alert("i:"+i+" ,j:"+j);		
        alert(j + i++);
    }
};
var c = test(1);
 
c();//提示1
 
c();//提示2
 
c();//提示3

//用var c引用test()后（此时 i 离开创造它的环境test()函数），
//只有一份函数指针指向同一个函数调用，所以后面的虽是三次c()，
//但还是运行的同一个函数，因为函数中的自由变量i早在加载的时候就已经赋值为0了，
//放在一个属于指向这个函数test()的“暂存区”，让每次调用都共享这个变量i的值
//（被引用的自由变量 i 与引用它的函数test()一同存在），允许所有指向同一个函数调用的之后每次调用修改 i 的值并且会生效。
//所以，指向同一个函数调用的三个c()都能修改 i 的值，并且修改都生效了。

